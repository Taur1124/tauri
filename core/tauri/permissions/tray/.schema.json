{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "test": {
      "description": "Test something!!",
      "anyOf": [
        {
          "$ref": "#/definitions/PermissionSet"
        },
        {
          "type": "null"
        }
      ]
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "default": {
            "allow": null,
            "deny": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "A restriction of the command/endpoint functionality.\n\nIt can be of any serde serializable type and is used for allowing or preventing certain actions inside a Tauri command.\n\nThe scope is passed to the command and handled/enforced by the command itself.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "allow-new -> Enables the new command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-new"
          ]
        },
        {
          "description": "deny-new -> Denies the new command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-new"
          ]
        },
        {
          "description": "allow-set-icon -> Enables the set_icon command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-icon"
          ]
        },
        {
          "description": "deny-set-icon -> Denies the set_icon command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-icon"
          ]
        },
        {
          "description": "allow-set-icon-as-template -> Enables the set_icon_as_template command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-icon-as-template"
          ]
        },
        {
          "description": "deny-set-icon-as-template -> Denies the set_icon_as_template command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-icon-as-template"
          ]
        },
        {
          "description": "allow-set-menu -> Enables the set_menu command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-menu"
          ]
        },
        {
          "description": "deny-set-menu -> Denies the set_menu command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-menu"
          ]
        },
        {
          "description": "allow-set-show-menu-on-left-click -> Enables the set_show_menu_on_left_click command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-show-menu-on-left-click"
          ]
        },
        {
          "description": "deny-set-show-menu-on-left-click -> Denies the set_show_menu_on_left_click command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-show-menu-on-left-click"
          ]
        },
        {
          "description": "allow-set-temp-dir-path -> Enables the set_temp_dir_path command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-temp-dir-path"
          ]
        },
        {
          "description": "deny-set-temp-dir-path -> Denies the set_temp_dir_path command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-temp-dir-path"
          ]
        },
        {
          "description": "allow-set-title -> Enables the set_title command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-title"
          ]
        },
        {
          "description": "deny-set-title -> Denies the set_title command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-title"
          ]
        },
        {
          "description": "allow-set-tooltip -> Enables the set_tooltip command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-tooltip"
          ]
        },
        {
          "description": "deny-set-tooltip -> Denies the set_tooltip command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-tooltip"
          ]
        },
        {
          "description": "allow-set-visible -> Enables the set_visible command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "allow-set-visible"
          ]
        },
        {
          "description": "deny-set-visible -> Denies the set_visible command without any pre-configured scope.",
          "type": "string",
          "enum": [
            "deny-set-visible"
          ]
        },
        {
          "description": "default -> Default permissions for the plugin.",
          "type": "string",
          "enum": [
            "default"
          ]
        }
      ]
    }
  }
}